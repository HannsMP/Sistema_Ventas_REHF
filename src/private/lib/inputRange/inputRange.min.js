class InputRange { #a; #b; constructor(i, t = {}) { this.divBox = i, this.#a = { min: t.min ?? 0, max: t.max ?? 100, step: t.step ?? 1, gap: t.gap ?? 0 }, this.#b = { min: this.#a.min, max: this.#a.max }, i.innerHTML = `<div class="wrapper"><div class="values"><input type="text" id="range1" value="${this.#a.min}" oninput="inputInt(this)"><span>&dash;</span><input type="text" id="range2" value="${this.#a.max}" oninput="inputInt(this)"></div><div class="container-input"><div class="slider-track"></div><div class="circle" id="circle-1"></div><div class="circle" id="circle-2"></div></div></div>`, this.displayValOne = i.querySelector("#range1"), this.displayValTwo = i.querySelector("#range2"), this.sliderTrack = i.querySelector(".slider-track"), this.circleOne = i.querySelector("#circle-1"), this.circleTwo = i.querySelector("#circle-2"), this.displayValOne.addEventListener("change", () => this.#c(!0)), this.displayValTwo.addEventListener("change", () => this.#c(!1)), this.circleOne.addEventListener("mousedown", () => this.#d(!0)), this.circleTwo.addEventListener("mousedown", () => this.#d(!1)), this.#e() } get min() { return this.#b.min } get max() { return this.#b.max } #c(i) { let t = i ? this.displayValOne : this.displayValTwo, e = parseInt(t.value, 10); if (isNaN(e)) return t.value = i ? this.#b.min : this.#b.max; e = Math.round(e / this.#a.step) * this.#a.step, i ? this.#b.min = e = Math.max(this.#a.min, Math.min(e, this.#b.max - this.#a.gap)) : this.#b.max = e = Math.min(this.#a.max, Math.max(e, this.#b.min + this.#a.gap)), t.value = e, this.#e() } #d(s) { let n = i => { let t = this.sliderTrack.getBoundingClientRect(), e = Math.round((Math.min(Math.max(0, (i.clientX - t.left) / t.width * 100), 100) / 100 * (this.#a.max - this.#a.min) + this.#a.min) / this.#a.step) * this.#a.step; s ? this.displayValOne.value = this.#b.min = Math.min(e, this.#b.max - this.#a.gap) : this.displayValTwo.value = this.#b.max = Math.max(e, this.#b.min + this.#a.gap), this.#e() }, a = () => { document.removeEventListener("mousemove", n), document.removeEventListener("mouseup", a) }; document.addEventListener("mousemove", n), document.addEventListener("mouseup", a) } #e() { let l = (this.#b.min - this.#a.min) / (this.#a.max - this.#a.min) * 100, o = (this.#b.max - this.#a.min) / (this.#a.max - this.#a.min) * 100; this.circleOne.style.left = `${l}%`, this.circleTwo.style.left = `${o}%`, this.sliderTrack.style.background = `linear-gradient(to right, rgb(var(--color-5)) ${l}% , rgb(var(--color-6)) ${l}% , rgb(var(--color-6)) ${o}%, rgb(var(--color-7)) ${o}%)` } }